import java.io.*;
import java.io.IOException;
import java.net.*;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class LoginChecker {
	ArrayList<User> userInfo = new ArrayList<User>();
	File dataFile = new File("/Users/jiminpark/Desktop/qweert/ChatServer/users.txt"); //파일 생성자엔 경로 적기 (상대경로)
	String readData = null; //파일에서 한 줄 한 줄 읽어올 객체 
	StringTokenizer st; //문자열 분리 
	
	LoginChecker(String _m) {
		String msg = _m;
		
		
		fileChecker(dataFile);
		System.out.println("Server> 유저 파일 읽기 완료 ");
		
		st = new StringTokenizer(msg, "!");
		String tag = st.nextToken();
		String id = st.nextToken();
		String pass = st.nextToken();
		
		Check(id, pass);
		
		
		
	}
	
	void fileChecker(File file) {
		File dataFile = file;
		
		
		try {
			BufferedReader br = new BufferedReader(new FileReader(dataFile));
			//외부에서 들어오는 값을 버퍼에서 읽는 것 = BufferedReader
			//BufferedReader를 사용하기 위해서는 FileReader 객체가 반드시 필요 (익명 객체)
			//FileReader 객체를 만들기 위해서는 파일 데이터 필요 (dataFile)
			while((readData=br.readLine())!=null) { //readDate에 readLine으로 한 줄 읽어와 저장 
				st = new StringTokenizer(readData, "!");
				String userId = st.nextToken();
				String userPassword = st.nextToken();
				User user = new User(userId, userPassword);
				userInfo.add(user);
			}
			br.close();
		}catch(Exception e) {
			System.out.println("Server > 유저 파일 읽기 에러");
		}
	}
	
	boolean Check(String _id, String _pass) {
		boolean flag = false;
		for(int i=0; i<userInfo.size() ;i++) {
			if(userInfo.get(i).id.equals(_id) && userInfo.get(i).pass.equals(_pass)) {
				flag = true;
			} //get 메소드 = i 인덱스를 가진 데이터 값 가져오기 
		}
		return flag;
	}
}


